{"version":3,"sources":["app/constants/history.ts","app/constants/index.ts","assets/loading.gif","serviceWorker.ts","app/App.tsx","index.tsx","app/components/Button/Button.tsx","app/components/Spinner/Spinner.tsx","app/components/Footer/Footer.tsx","app/components/Form/Form.tsx","app/components/PageWrapper/PageWrapper.tsx","app/components/NotesWrapper/NotesWrapper.tsx","app/components/index.ts","app/contexts/NotesContext.tsx","app/contexts/index.ts"],"names":["history","createBrowserHistory","basename","process","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ListNotes","lazy","NotePage","ReactDOM","render","className","fallback","exact","path","component","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ButtonStyle","Spinner","src","loading","alt","Footer","Button","forwardRef","ref","text","Icon","color","GREEN","noPreventDefault","rest","onClick","e","type","preventDefault","classNames","aria-label","Form","note","textSumbit","onInputChange","onSumbit","useState","inputs","setInputs","useEffect","htmlFor","name","value","title","onChange","event","target","titleError","BLUE","ValidationTitle","PageWrapper","header","headerButton","children","NotesWrapper","useContext","NotesContext","isLoading","data","initialState","length","success","CreateNote","Promise","ChangeNote","RemoveNote","React","createContext","NotesProvider","setIsLoading","setData","axios","res","json","Provider","post","push","id","map","val","delete","filter"],"mappings":"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","file":"static/js/main.91cc2805.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory({\r\n\tbasename: process.env.PUBLIC_URL\r\n});","export * from \"./history\";","module.exports = __webpack_public_path__ + \"static/media/loading.a90e737d.gif\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\n\r\nimport { history } from './constants';\r\nimport { NotesProvider } from './contexts';\r\nimport { Spinner, Footer } from './components';\r\n\r\nconst ListNotes = lazy(() => import(\"./pages/ListNotes\"));\r\nconst NotePage = lazy(() => import('./pages/NotePage'));\r\n\r\nexport const App: React.FC = () => (\r\n\t<Router history={history}>\r\n\t\t<div className=\"page\">\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<NotesProvider>\r\n\t\t\t\t\t<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/:id\" component={NotePage} />\r\n\t\t\t\t\t\t\t<Route path=\"/\" component={ListNotes} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t</NotesProvider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n// for supports IE9+\r\nimport 'react-app-polyfill/ie9';\r\n\r\nimport './styles/boot.scss';\r\n\r\nimport { App } from 'app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React, { forwardRef } from 'react';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport enum ButtonStyle {\r\n\tGREEN = 'green',\r\n\tRED = 'red',\r\n\tBLUE = 'blue'\r\n}\r\n\r\nexport interface IButton extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n\ttext?: string;\r\n\tIcon?: React.FunctionComponent<React.SVGProps<SVGSVGElement> & { title?: string; }>;\r\n\tcolor?: ButtonStyle;\r\n\tnoPreventDefault?: boolean;\r\n}\r\n\r\nconst Button = forwardRef<HTMLButtonElement, IButton>(\r\n\t({ text, Icon, color = ButtonStyle.GREEN, noPreventDefault, className, ...rest }, ref) => (\r\n\t\t<button\r\n\t\t\t{...rest}\r\n\t\t\tref={ref}\r\n\t\t\tonClick={e => {\r\n\t\t\t\tif (!noPreventDefault && rest.type !== \"submit\")\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (rest.onClick)\r\n\t\t\t\t\trest.onClick(e);\r\n\t\t\t}}\r\n\t\t\tclassName={classNames(\"button\", className, color)}\r\n\t\t\taria-label={text ?? \"icon button\"}\r\n\t\t>\r\n\t\t\t{text && <span>{text}</span>}\r\n\t\t\t{Icon && <Icon />}\r\n\t\t</button>\r\n\t));\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport loading from \"assets/loading.gif\";\r\n\r\nconst Spinner: React.FC = () => (\r\n\t<>\r\n\t\t<div className=\"spinner\">\r\n\t\t\t<img src={loading} alt=\"loading...\" />\r\n\t\t</div>\r\n\t</>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Footer = () => (\r\n\t<footer className=\"footer\">\r\n\t\t<p>© 2020 some copyright</p>\r\n\t</footer>\r\n);\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { INote, INoteInput } from 'app/entities';\r\nimport { Button, ButtonStyle } from '../Button';\r\n\r\n\r\ninterface IForm {\r\n\tnote: INote;\r\n\ttextSumbit: string;\r\n\tonInputChange?: (noteInut: INoteInput) => void;\r\n\tonSumbit: (noteInut: INoteInput) => void;\r\n}\r\n\r\n\r\nexport const ValidationTitle = (title: string) => {\r\n\tif (!title)\r\n\t\treturn \"Заголовок не может быть пустым\";\r\n\r\n\treturn \"\";\r\n};\r\n\r\nconst Form: React.FC<IForm> = ({ note, textSumbit, onInputChange, onSumbit }) => {\r\n\r\n\tconst [inputs, setInputs] = useState<INoteInput>(note);\r\n\r\n\tconst handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tonInputChange?.(inputs);\r\n\r\n\t\tsetInputs(inputs => ({\r\n\t\t\t...inputs,\r\n\t\t\t[name]: value,\r\n\t\t\t[name + \"Error\"]: \"\"\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleSumbit = (event: React.FormEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { title } = inputs;\r\n\r\n\t\tconst titleError = ValidationTitle(title);\r\n\r\n\t\tsetInputs(inputs => ({ ...inputs, titleError }));\r\n\r\n\t\tif (titleError)\r\n\t\t\treturn;\r\n\r\n\t\tonSumbit({ ...note, ...inputs });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tonInputChange?.(inputs);\r\n\t}, [inputs, onInputChange]);\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"form-label\" htmlFor=\"title\">Краткое описание</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputs.title}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"input-error\" >{inputs.titleError}</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext={textSumbit}\r\n\t\t\t\t\tcolor={ButtonStyle.BLUE}\r\n\t\t\t\t\tonClick={handleSumbit}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nimport { IButton } from \"app/components\";\r\n\r\ninterface IPageWrapper {\r\n\theader: string;\r\n\theaderButton: IButton;\r\n}\r\n\r\nconst PageWrapper: React.FC<IPageWrapper> = ({ header, headerButton, children }) => (\r\n\t<div className=\"page-index\">\r\n\r\n\t\t<div className=\"header\">\r\n\r\n\t\t\t<div className=\"header-title\">\r\n\t\t\t\t<h1>{header}</h1>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"header-button\">\r\n\t\t\t\t{headerButton}\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t\t<div className=\"content\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default PageWrapper;","import React, { useContext } from 'react';\r\n\r\nimport { Spinner } from 'app/components';\r\nimport { NotesContext } from 'app/contexts';\r\n\r\nconst NotesWrapper: React.FC = ({ children }) => {\r\n\r\n\tconst { isLoading, data } = useContext(NotesContext);\r\n\r\n\tif (isLoading) {\r\n\t\treturn <Spinner />;\r\n\t}\r\n\r\n\tif (!data || data.error) {\r\n\t\treturn (\r\n\t\t\t<div className=\"content-error\">\r\n\t\t\t\t{data?.error || \"Произошла ошибка при загрузке списка\"}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NotesWrapper;","export * from \"./Spinner\";\r\nexport * from \"./Footer\";\r\nexport * from \"./Button\";\r\nexport * from \"./Form\";\r\n\r\nexport * from \"./PageWrapper\";\r\nexport * from \"./NotesWrapper\";","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { IList, INoteBase, INote, IResponseBase, INoteCreated } from 'app/entities';\r\nimport { NotesWrapper } from 'app/components';\r\n\r\ninterface INotesContext {\r\n\tisLoading: boolean;\r\n\tdata: IList;\r\n\tCreateNote: (note: INoteBase) => Promise<void>;\r\n\tChangeNote: (note: INote) => Promise<void>;\r\n\tRemoveNote: (note: INote) => Promise<void>;\r\n}\r\n\r\nconst initialState = {\r\n\tisLoading: true,\r\n\tdata: {\r\n\t\tdata: [],\r\n\t\tlength: 0,\r\n\t\tsuccess: false,\r\n\t\terror: \"\",\r\n\t},\r\n\tCreateNote: () => new Promise(() => { }),\r\n\tChangeNote: () => new Promise(() => { }),\r\n\tRemoveNote: () => new Promise(() => { })\r\n} as INotesContext;\r\n\r\nexport const NotesContext = React.createContext<INotesContext>(initialState);\r\n\r\nexport const NotesProvider: React.FC = ({ children }) => {\r\n\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState(initialState.data);\r\n\r\n\tconst CreateNote = (note: INoteBase) => {\r\n\r\n\t\treturn axios.post(process.env.REACT_APP_API_URL, note)\r\n\t\t\t.then<INoteCreated>(res => res.data)\r\n\t\t\t.then(res => {\r\n\r\n\t\t\t\tif (!res.error && res.success) {\r\n\t\t\t\t\tdata.data.push({\r\n\t\t\t\t\t\t...note,\r\n\t\t\t\t\t\tid: res.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.length = data.data.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetData({\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\t...res\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.log);\r\n\t};\r\n\r\n\tconst ChangeNote = ({ id, ...rest }: INote) => {\r\n\r\n\t\treturn axios.post(`${process.env.REACT_APP_API_URL}/${id}`, rest)\r\n\t\t\t.then<IResponseBase>(res => res.data)\r\n\t\t\t.then(res => {\r\n\r\n\t\t\t\tif (!res.error && res.success) {\r\n\t\t\t\t\tdata.data = data.data.map(val => {\r\n\t\t\t\t\t\tif (val.id === id) {\r\n\t\t\t\t\t\t\tval = { ...val, ...rest };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn val;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetData({\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\t...res\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.log);\r\n\t};\r\n\r\n\tconst RemoveNote = (note: INote) => {\r\n\r\n\t\treturn axios.delete(`${process.env.REACT_APP_API_URL}/${note.id}`)\r\n\t\t\t.then<IResponseBase>(res => res.data)\r\n\t\t\t.then(res => {\r\n\r\n\t\t\t\tif (!res.error && res.success) {\r\n\t\t\t\t\tdata.data = data.data.filter(val => val.id !== note.id);\r\n\t\t\t\t\tdata.length = data.data.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetData({\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\t...res\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.log);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\taxios.get(process.env.REACT_APP_API_URL)\r\n\t\t\t.then<IList>(res => res.data)\r\n\t\t\t.then(json => setData(json))\r\n\t\t\t.then(() => setIsLoading(false))\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<NotesContext.Provider value={{\r\n\t\t\tisLoading,\r\n\t\t\tdata,\r\n\t\t\tCreateNote,\r\n\t\t\tChangeNote,\r\n\t\t\tRemoveNote\r\n\t\t}}>\r\n\t\t\t<NotesWrapper>\r\n\t\t\t\t{children}\r\n\t\t\t</NotesWrapper>\r\n\t\t</NotesContext.Provider>\r\n\t);\r\n};","export * from \"./NotesContext\";"],"sourceRoot":""}